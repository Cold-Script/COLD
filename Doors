local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/RedzLibV5/main/Source.Lua"))()
local Window = Library:MakeWindow({
  Title = "ðŸŽƒ DOORS - Halloween",
  SubTitle = "| ðŸŽ® YIYO",
  SaveFolder = "testando | redz lib v5.lua"
})
local inf = 9e9
Window:AddMinimizeButton({
  Button = { Image = "rbxassetid://10747371901", BackgroundTransparency = 0, ImageTransparency = 0.25, Size = UDim2.new(0.05, 0, 0.115, 0)},
  Corner = { CornerRadius = UDim.new(0, inf) }
})
local Tabs = {
Main = Window:MakeTab({"Main", "home"}),
Exploit = Window:MakeTab({"Exploits", "flashlight"}),
Visual = Window:MakeTab({"Visual", "camera"})
}
Tabs.Main:AddSection({"GamePlay"})
Tabs.Main:AddDropdown({
  Name = "Select on Death",
  Description = "Select on <font color='rgb(255, 0, 0)'>Death</font>",
  Options = {"Revive", "Leave", "Lobby"},
  Default = "Revive",
  Callback = function(v)
_G.SelectDeath = v
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectDeath == "Lobby" then
if _G.EnabledDeath then
game.ReplicatedStorage.EntityInfo.Lobby:FireServer()
game.ReplicatedStorage.RemoteFolder.Lobby:FireServer()
end
elseif game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectDeath == "Leave" then
if _G.EnabledDeath then
game:Shutdown()
end
elseif game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectDeath == "Revive" then
if _G.EnabledDeath then
game.ReplicatedStorage.RemoteFolder.Revive:FireServer()
game.ReplicatedStorage.EntityInfo.Revive:FireServer()
end
end
end})
Tabs.Main:AddToggle({
  Name = "Enabled Death",
  Description = "Enabled on <font color='rgb(255, 0, 0)'>Death</font>",
  Default = false,
  Callback = function(v)
_G.EnabledDeath = v
end})
Tabs.Main:AddSection({"Players"})
Tabs.Main:AddSlider({
  Name = "Speed Boost",
  Description = "Select <font color='rgb(255, 0, 0)'>Speed</font>",
  Min = 16,
  Max = 50,
  Increase = 1,
  Default = 16,
  Callback = function(v)
_G.Speed = v
end})
Tabs.Main:AddToggle({
  Name = "Enabled Speed Boost",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Speed</font>",
  Default = false,
  Callback = function(v)
_G.EnabledSpeed = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledSpeed then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.Speed or 15
else
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 15
end
end)
end})
Tabs.Main:AddToggle({
  Name = "Noclip",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Noclip</font>",
  Default = false,
  Callback = function(v)
_G.Noclip = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Collision.CanCollide = not _G.Noclip
end)
end})
Tabs.Main:AddToggle({
  Name = "Jump",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Jump</font>",
  Default = false,
  Callback = function(v)
_G.Jump = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character:SetAttribute("CanJump", _G.Jump)
end)
end})
Tabs.Main:AddToggle({
  Name = "No Acceleration",
  Description = "Enabled Body <font color='rgb(255, 0, 0)'>No Massless</font>",
  Default = false,
  Callback = function(v)
_G.NoSlow = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Head.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LowerTorso.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.UpperTorso.Massless = not _G.NoSlow;
end)
end})
Tabs.Main:AddToggle({
  Name = "Slow Gravity",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Slow Gravity</font>",
  Default = false,
  Callback = function(v)
_G.SlowJump = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.SlowJump then
workspace.Gravity = 50
else
workspace.Gravity = 90
end
end)
end})
Tabs.Main:AddToggle({
  Name = "Instance Interact",
  Description = "Enabled <font color='rgb(255, 0, 0)'>No Hold</font>",
  Default = false,
  Callback = function(v)
_G.InstanceInteract = v
if _G.InstanceInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
end)
else
InstanceInteract:Disconnect()
end
end})
Tabs.Main:AddToggle({
  Name = "Cross Interaction",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Cross Interaction</font>",
  Default = false,
  Callback = function(v)
_G.CrossInteraction = v
if _G.CrossInteraction then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
CrossInteraction = workspace.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = true
end
end
CrossInteraction:Disconnect()
end
end})
Tabs.Main:AddToggle({
  Name = "Range Interaction",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Range Interaction</font>",
  Default = false,
  Callback = function(v)
_G.RangeInteraction = v
if _G.RangeInteraction then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 3
end
end
RangeInteraction = workspace.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 3
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 1
end
end
RangeInteraction:Disconnect()
end
end})
Tabs.Main:AddToggle({
  Name = "Speed Bypass",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Speed Bypass</font>",
  Default = false,
  Callback = function(v)
_G.SpeedBypass = v
if _G.SpeedBypass then
_G.Wait = 0.2
else
_G.Wait = 1
end
local character = game.Players.LocalPlayer.Character
local humanoid = character:FindFirstChildOfClass("Humanoid")
local speedBoost, speedBoostFinished, speed = 30, false, false
if bypass then
if collisionClone then collisionClone:Destroy() end
speed = true       
local originalSpeed = SpeedBypass
repeat task.wait()
if not SpeedBypass then
SpeedBypass:SetValue(true)
end
until speedBoostFinished
SpeedBypass:SetValue(originalSpeed)
else
if not collisionClone then
collisionClone = character.Collision:Clone() do
collisionClone.CanCollide = false
collisionClone.Massless = true
collisionClone.Name = "CollisionClone"
if collisionClone:FindFirstChild("CollisionCrouch") then
collisionClone.CollisionCrouch:Destroy()
end   
collisionClone.Parent = character    
end
end
task.spawn(function()  
while not speedBoostFinished do
collisionClone.Massless = not collisionClone.Massless
task.wait(_G.Wait or 1)
end           
collisionClone.Massless = true                  
end)
end
end})
if not game.ReplicatedStorage.GameData.Floor.Value == "Fools" then
Tabs.Main:AddToggle({
  Name = "God Mode",
  Description = "Enabled <font color='rgb(255, 0, 0)'>God Mode</font>",
  Default = false,
  Callback = function(v)
_G.GodMode = false
wait(0.1)
_G.GodMode = v
if _G.GodMode then
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,2.65,0)
else
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,-2.65,0)
end
end})
elseif game.ReplicatedStorage.GameData.Floor.Value == "Fools" then
Tabs.Main:AddToggle({
  Name = "God Mode",
  Description = "Enabled <font color='rgb(255, 0, 0)'>God Mode</font>",
  Default = false,
  Callback = function(v)
_G.GodModeFools = false
wait(0.1)
_G.GodModeFools = v
if _G.GodModeFools then
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,8,0)
else
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,-8,0)
end
end})
end
Tabs.Main:AddSection({"Miscarriage"})
Tabs.Main:AddSlider({
  Name = "Max Greed",
  Description = "Select <font color='rgb(255, 0, 0)'>Max Greed</font>",
  Min = 0,
  Max = 5,
  Increase = 1,
  Default = 0,
  Callback = function(v)
_G.Greed = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer:SetAttribute("Greed", v)
end)
end})
Tabs.Main:AddToggle({
  Name = "Reach Door",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Far Doors</font>",
  Default = false,
  Callback = function(v)
_G.ReachDoors = v
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.ReachDoors then 
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
end})
Tabs.Main:AddToggle({
  Name = "Fast Door",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Fast Door</font>",
  Default = false,
  Callback = function(v)
_G.FastDoors = v
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastDoors then 
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
end})
Tabs.Main:AddToggle({
  Name = "Closet Exit Fix",
  Description = "Closet <font color='rgb(255, 0, 0)'>Dont Exit Error</font>",
  Default = false,
  Callback = function(v)
_G.ClosetsExitFix = v
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
if _G.ClosetsExitFix and game.Players.LocalPlayer.Character:GetAttribute("Hiding")==true then 
game:GetService("ReplicatedStorage").EntityInfo.CamLock:FireServer()
end 
end)
end})
Tabs.Main:AddSection({"Automation"})
Tabs.Main:AddToggle({
  Name = "Auto Interact",
  Description = "Enabled <font color='rgb(255, 0, 0)'>Auto Interact</font>",
  Default = false,
  Callback = function(v)
_G.AutoLoot = v
if v then
local function setup(room)
local function check(v)
if v:IsA("Model") then
if v.Name == "DrawerContainer" then
local knob = v:WaitForChild("Knobs")
if knob then
local prompt = knob:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(knob.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
end
elseif v.Name == "GoldPile" then
local prompt = v:WaitForChild("LootPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "Candy" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "Bandage" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "KeyObtain" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name:sub(1,8) == "ChestBox" then
local prompt = v:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "RolltopContainer" then
local prompt = v:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")                       
if not interactions then
task.spawn(function()
repeat task.wait(0.1)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
end 
end
end
local subaddcon
subaddcon = room.DescendantAdded:Connect(function(v)
check(v) 
end)            
for i,v in pairs(room:GetDescendants()) do
check(v)
end            
task.spawn(function()
repeat task.wait() until not _G.AutoLoot
subaddcon:Disconnect() 
end)
end        
local addconnect
addconnect = workspace.CurrentRooms.ChildAdded:Connect(function(room)
setup(room)
end)        
for i,room in pairs(workspace.CurrentRooms:GetChildren()) do
if room:FindFirstChild("Assets") then
setup(room) 
end
end        
repeat task.wait() until not _G.AutoLoot
addconnect:Disconnect()
end
end})
Tabs.Visual:AddSlider({
  Name = "Field Of View",
  Description = "Select <font color='rgb(255, 0, 0)'>Field Of View</font>",
  Min = 70,
  Max = 120,
  Increase = 1,
  Default = 70,
  Callback = function(v)
_G.FieldOfView = v
end})
Tabs.Visual:AddToggle({
  Name = "Field Of View",
  Description = "Enabled on <font color='rgb(255, 0, 0)'>Field Of View</font>",
  Default = false,
  Callback = function(v)
_G.Field = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.Field then
workspace.CurrentCamera.FieldOfView = _G.FieldOfView or 70
else
workspace.CurrentCamera.FieldOfView = 70
end
end)
end})
Tabs.Visual:AddDropdown({
  Name = "View Mode",
  Description = "Select on <font color='rgb(255, 0, 0)'>Death</font>",
  Options = {"Diagonal", "MaxAxis", "Vertical"},
  Default = "Diagonal",
  Callback = function(v)
workspace.CurrentCamera.FieldOfViewMode = v
end})
Tabs.Visual:AddSection({"Lighting"})
Tabs.Visual:AddToggle({
  Name = "Fullbright",
  Description = "Enabled on <font color='rgb(255, 0, 0)'>Fullbright</font>",
  Default = false,
  Callback = function(v)
if v then
game.Lighting.Brightness = 1.5
game.Lighting.GlobalShadows = false
game.Lighting.OutdoorAmbient = Color3.new(1,1,1)
else
game.Lighting.Brightness = 1
game.Lighting.GlobalShadows = true
game.Lighting.OutdoorAmbient = Color3.new(0,0,0)
end
end})
Tabs.Visual:AddToggle({
  Name = "No Fog",
  Description = "Enabled <font color='rgb(255, 0, 0)'>No Fog</font>",
  Default = false,
  Callback = function(v)
pcall(function()
if not game.Lighting:GetAttribute("FogStart") then game.Lighting:SetAttribute("FogStart", game.Lighting.FogStart) end
if not game.Lighting:GetAttribute("FogEnd") then game.Lighting:SetAttribute("FogEnd", game.Lighting.FogEnd) end
game.Lighting.FogStart = value and 0 or game.Lighting:GetAttribute("FogStart")
game.Lighting.FogEnd = value and math.huge or game.Lighting:GetAttribute("FogEnd")
local fog = game.Lighting:FindFirstChildOfClass("Atmosphere")
if fog then
if not fog:GetAttribute("Density") then fog:SetAttribute("Density", fog.Density) end
fog.Density = value and 0 or fog:GetAttribute("Density")
end
end)
end})
Tabs.Visual:AddButton({"Remove Sky Effect", function()game.Lighting.Sky:Destroy()end})
Tabs.Visual:AddButton({"Remove Blur Effect", function()game.Lighting.Blur:Destroy()end})
